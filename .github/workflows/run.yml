name: Build geosite files
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true
          repo: dl123100/clash-geosite

      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "LAN_URL=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.list" >> $GITHUB_ENV
          echo "SPEEDTEST_URL=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.list" >> $GITHUB_ENV
          echo "IPV6TEST_URL=https://raw.githubusercontent.com/dl123100/clash-geosite/master/rule-files/network.txt" >> $GITHUB_ENV
          echo "MICROSOFT_CN_URL=https://raw.githubusercontent.com/dl123100/clash-geosite/master/rule-files/microsoft%40cn.yaml" >> $GITHUB_ENV
          echo "APPLE_CN_URL=https://rules.kr328.app/apple@cn.yaml" >> $GITHUB_ENV
          echo "GOOGLE_CN_URL=https://rules.kr328.app/google@cn.yaml" >> $GITHUB_ENV
          echo "CATEGORY_GAMES_CN_URL=https://rules.kr328.app/category-games@cn.yaml" >> $GITHUB_ENV
          echo "PROXY_URL=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Proxy/Proxy.list" >> $GITHUB_ENV
          echo "CHINAMAX_URL=https://raw.githubusercontent.com/dl123100/clash-geosite/master/rule-files/ChinaMax.list" >> $GITHUB_ENV
        shell: bash

      - name: Checkout Loyalsoldier/domain-list-custom
        uses: actions/checkout@v3
        with:
          repository: Loyalsoldier/domain-list-custom
          path: custom

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v3
        with:
          repository: v2fly/domain-list-community
          path: community

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: ./custom/go.mod
          cache-dependency-path: ./custom/go.sum

      - name: Generate lan
        env:
          SED: sed '/^\s*#/d' | sed 's/DOMAIN,/full:/g' | sed 's/DOMAIN-SUFFIX,//g' | sed '/^\s*IP-CIDR/d'
        run: |
          curl -sSL $LAN_URL | ${{ env.SED }} > ./community/mydata/lan

      - name: Generate networktest
        env:
          SED: sed '/^\s*#/d' | sed 's/DOMAIN-SUFFIX,//g' | sed 's/DOMAIN-KEYWORD,/keyword:/g'
        run: |
          curl -sSL $SPEEDTEST_URL | ${{ env.SED }} > ./community/mydata/networktest1
          curl -sSL $IPV6TEST_URL >> ./community/mydata/networktest1
          sort ./community/mydata/networktest1 | uniq -i > ./community/mydata/networktest
          rm -f ./community/mydata/networktest1

      - name: Generate microsoft-cn
        env:
          SED: sed '/^\s*#/d' | sed '/payload:/d' | sed 's/- "+.//g' | sed 's/- "/full:/g' | sed 's/"$//' | sed '/^\s*$/d'
        run: |
          curl -sSL $MICROSOFT_CN_URL | ${{ env.SED }} > ./community/mydata/microsoft-cn

      - name: Generate apple-cn
        env:
          SED: sed '/^\s*#/d' | sed '/payload:/d' | sed 's/- "+.//g' | sed 's/- "/full:/g' | sed 's/"$//' | sed '/^\s*$/d'
        run: |
          curl -sSL $APPLE_CN_URL | ${{ env.SED }} > ./community/mydata/apple-cn

      - name: Generate google-cn
        env:
          SED: sed '/^\s*#/d' | sed '/payload:/d' | sed 's/- "+.//g' | sed 's/- "/full:/g' | sed 's/"$//' | sed '/^\s*$/d' | sed '/googleapis.cn/d'
        run: |
          curl -sSL $GOOGLE_CN_URL | ${{ env.SED }} > ./community/mydata/google-cn

      - name: Generate games-cn
        env:
          SED: sed '/^\s*#/d' | sed '/payload:/d' | sed 's/- "+.//g' | sed 's/- "/full:/g' | sed 's/"$//' | sed '/^\s*$/d'
        run: |
          curl -sSL $CATEGORY_GAMES_CN_URL | ${{ env.SED }} > ./community/mydata/games-cn

      - name: Generate cn
        env:
          SED: sed '/^\s*#/d' | sed '/^PROCESS-NAME,/d' | sed 's/DOMAIN,/full:/g' | sed 's/DOMAIN-SUFFIX,//g' | sed 's/DOMAIN-KEYWORD,/keyword:/g' | sed '/^\s*IP-CIDR/d'
        run: |
          curl -sSL $CHINAMAX_URL | ${{ env.SED }} > ./community/mydata/cn

      - name: Put together user.yaml
        env:
          SED: sed 's/^/    - /'
        run: |
          mkdir -p ./tmp
          mkdir -p ./publish
          curl -sSL https://raw.githubusercontent.com/dl123100/clash-geosite/master/user-config/front-user.yaml > ./tmp/temp-user.txt
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/NTPService/NTPService.list | sed '/^\s*#/d' | sed 's/DOMAIN-SUFFIX,//g' | ${{ env.SED }} >> ./tmp/temp-user.txt
          curl -sSL https://raw.githubusercontent.com/XIU2/TrackersListCollection/master/all.txt | grep -i '\.[A-Z]' | sed 's/^.*\/\///g' | sed 's/:.*\/.*//g' | ${{ env.SED }} >> ./tmp/temp-user.txt
          curl -sSL https://raw.githubusercontent.com/dl123100/clash-geosite/master/user-config/later-user.yaml >> ./tmp/temp-user.txt
          cat ./tmp/temp-user.txt > ./publish/user.yaml
          rm -f ./tmp/temp-user.txt

      - name: Build geosite.dat file
        run: |
          cd community || exit 1
          go run ./ --datapath=./mydata --outputname geosite.dat

      - name: Move files
        run: |
          rm -rf ./tmp
          install -Dp ./community/geosite.dat ./publish/geosite.dat
          cd ./publish || exit 1

      - name: Release and upload assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: latest
          tag: latest
          file_glob: true
          file: ./publish/*

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
